// TODO - Предусмотреть возможность работы на разных версиях платформы
// TODO - Возможность включать историю по всем элементам раздела
// TODO - Оптимизация. Получать и сохранять текщего пользователя в данных формы
// TODO - Оптимизация. Получать количество элементов одним запросом через объединение
// TODO - Ошибка. Запись первой версии при отключенной истории выдает ошибку
// TODO - Константы и прочие объекты появившиеся в новых версиях платформы
// TODO - Добавить ссылку на документацию 
// TODO - Раздел метаданных не всегда отображает адекватное положение дел
// TODO - Изменить формулировку "Объект" на "Элемент" при расчете количества и прочем
// TODO - Добавить фильтр/поиск по метаданным 


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Лев(ИмяФормы,9) = "Обработка" Тогда
		ИмяОбработки = "Обработка.НастройкаИПросмотрИсторииДанных";
	Иначе
		ИмяОбработки = "ВнешняяОбработка.НастройкаИПросмотрИсторииДанных";		 
	КонецЕсли;
	
	ПолучитьВсеНастройкиИсторииДанныхНаСервере();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоОбъектовМетаданныхНастройкиИсторииДанныхПредприятиеПриИзменении(Элемент)
	
	УстановитьНастройкуИстории(Элементы.ДеревоОбъектовМетаданных.ТекущиеДанные.НастройкиИсторииДанныхПредприятие);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДеревоОбъектовМетаданныхПредставление" Тогда
		ОткрытьСписокОбъекта(Элемент.ТекущаяСтрока);	
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Поле.Имя = "ДеревоОбъектовМетаданныхКоличествоОбъектов" И ТекущиеДанные.КоличествоОбъектов = "Получить" Тогда
		
		ТекущиеДанные.КоличествоОбъектов = КоличествоЭлементовПоОбъектуМетаданныхНаСервере(ТекущиеДанные.ИмяМетаданныхЕЧ, ТекущиеДанные.Имя);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьНастройкиИстории(Команда)
	
	ПолучитьВсеНастройкиИсторииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьТекущиеВерсии(Команда)
	
	МассивИдентификаторовСтрок = Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки;
	
	ТаблицаВыделенныхМетаданных = ТаблицаВыделенныхМетаданныхНаСервере(МассивИдентификаторовСтрок); 
	
	ПараметрыФормы = Новый Структура("МассивИдентификаторовСтрок", МассивИдентификаторовСтрок);
	ОткрытьФорму(ИмяОбработки + ".Форма.ФормаЗаписиТекущихВерсий", ПараметрыФормы, ЭтаФорма);
	
	//ЗаписатьПервыеВерсииНаСервере(МассивИдентификаторовСтрок);
		
КонецПроцедуры

&НаСервере
Функция ТаблицаВыделенныхМетаданныхНаСервере(МассивИдентификаторовСтрок)

	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить();

	Для Каждого Стр Из МассивИдентификаторовСтрок Цикл
		
		ЭлементТОМ = ВладелецФормы.ДеревоОбъектовМетаданных.НайтиПоИдентификатору(Стр.Значение);
		
		МенеджерОбъектаМетаданных = НеОпределено;
		Выполнить("МенеджерОбъектаМетаданных = " + ЭлементТОМ.ИмяМетаданных);
		
		ВыборкаЭлементовПО = МенеджерОбъектаМетаданных[ЭлементТОМ.Имя].Выбрать();
		
//		Пока ВыборкаЭлементовПО.Следующий() Цикл
//			
//			ИсторияДанных.ЗаписатьВерсию(ВыборкаЭлементовПО.ПолучитьОбъект(), ТекущаяДата(),  ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор , ПользователиИнформационнойБазы.ТекущийПользователь().Имя, ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя, ВидИзмененияДанных.Добавление, "Первая версия", "Первая версия", НеОпределено);
//			
//		КонецЦикла
		
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ВключитьВыделеные(Команда)
	
	УстановитьНастройкуИстории("Включена");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВыделеные(Команда)
	
	УстановитьНастройкуИстории("Отключена");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВыделенные(Команда)
	
	УстановитьНастройкуИстории("Из свойств конфигурации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписок(Команда)
	
	ОткрытьСписокОбъекта(Элементы.ДеревоОбъектовМетаданных.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьКоличествоЭлементов(Команда)
	
	ПосчитатьКоличествоЭлементовНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьКоличествоВерсий(Команда)
	
	МассивИдентификаторовСтрок = Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки;

	ВыбратьВерсииНаСервере(МассивИдентификаторовСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВерсии(Команда)
	
	ЭлементТОМ = Элементы.ДеревоОбъектовМетаданных.ТекущиеДанные;
	
	П = Новый Структура("ИмяМетаданных, ИмяМетаданныхЕЧ, Имя", ЭлементТОМ.ИмяМетаданных, ЭлементТОМ.ИмяМетаданныхЕЧ, ЭлементТОМ.Имя);
	ОткрытьФорму(ИмяОбработки + ".Форма.ФормаУдаленияВерсий", П);
	
КонецПроцедуры

&НаКлиенте
Процедура Версии(Команда)
	
	ЭлементТОМ = Элементы.ДеревоОбъектовМетаданных.ТекущиеДанные;
	
	П = Новый Структура("ИмяМетаданных, ИмяМетаданныхЕЧ, Имя", ЭлементТОМ.ИмяМетаданных, ЭлементТОМ.ИмяМетаданныхЕЧ, ЭлементТОМ.Имя);
	ОткрытьФорму(ИмяОбработки + ".Форма.ФормаСпискаВерсий", П);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПоРеквизитам(Команда)
	
	ЭлементДерева = Элементы.ДеревоОбъектовМетаданных.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура("ИмяМетаданных, ИмяМетаданныхЕЧ, Имя", ЭлементДерева.ИмяМетаданных, ЭлементДерева.ИмяМетаданныхЕЧ, ЭлементДерева.Имя);
	ОткрытьФорму(ИмяОбработки + ".Форма.ФормаПореквизитнойНастройки", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовМетаданныхПриАктивизацииСтроки(Элемент)
	
	ЭлементДерева = Элемент.ТекущиеДанные;
	
	Если ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Из свойств конфигурации" Тогда
		Элементы.ДеревоОбъектовМетаданныхНастройкаПоРеквизитам.Доступность = Ложь;
	Иначе
		Элементы.ДеревоОбъектовМетаданныхНастройкаПоРеквизитам.Доступность = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИсторию(Команда)
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму(ИмяОбработки + ".Форма.ФормаОбновленияИсторииДанных", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробноПоОбъекту(Команда)
	
	ЭлементДерева = Элементы.ДеревоОбъектовМетаданных.ТекущиеДанные;

	ПараметрыИсторииДанных = Новый Структура();
	ПараметрыИсторииДанных.Вставить("Раздел",                             ЭлементДерева.Раздел);
	ПараметрыИсторииДанных.Вставить("Имя",                                ЭлементДерева.Имя);
	ПараметрыИсторииДанных.Вставить("Синоним",                            ЭлементДерева.Синоним);
	ПараметрыИсторииДанных.Вставить("НастройкиИсторииДанныхКонфигуратор", ЭлементДерева.НастройкиИсторииДанныхКонфигуратор);
	ПараметрыИсторииДанных.Вставить("НастройкиИсторииДанныхПредприятие",  ЭлементДерева.НастройкиИсторииДанныхПредприятие);
	
	ЭлементДерева.КоличествоОбъектов = КоличествоЭлементовПоОбъектуМетаданныхНаСервере(ЭлементДерева.ИмяМетаданныхЕЧ, ЭлементДерева.Имя);
	ПараметрыИсторииДанных.Вставить("КоличествоОбъектов",                 ЭлементДерева.КоличествоОбъектов);
	
	ЭлементДерева.КоличествоВерсий = КоличествоВерсийОбъектаМетаданных(ЭлементДерева.ИмяМетаданных, ЭлементДерева.Имя);
	ПараметрыИсторииДанных.Вставить("КоличествоВерсий",                   ЭлементДерева.КоличествоВерсий);
												  
	П = Новый Структура("ПараметрыИсторииДанных", ПараметрыИсторииДанных);

	ОткрытьФорму(ИмяОбработки + ".Форма.ФормаПодробноОбОбъекте", П, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подробно(Команда)

	Подробно = Не Подробно;
	ПоказатьСкрытьДополнительныеКолонки();

КонецПроцедуры

&НаКлиенте
Процедура ИменаСинонимы(Команда)

	Синонимы = Не Синонимы;
	ОтобразитьИменаСинонимы();

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьВсеНастройкиИсторииДанныхНаСервере()
	
	ЭлементыДереваРазделы = ДеревоОбъектовМетаданных.ПолучитьЭлементы();
	ЭлементыДереваРазделы.Очистить();
	
	Если Метаданные.Справочники.Количество() > 0 Тогда
		ПолучитьМетаданныеНаСервере("Справочники", "Справочники", "Справочник", 3);
	КонецЕсли;
	
	Если Метаданные.Документы.Количество() > 0 Тогда
		ПолучитьМетаданныеНаСервере("Документы", "Документы", "Документ", 7);
	КонецЕсли;
	
	Если Метаданные.РегистрыСведений.Количество() > 0 Тогда
		ПолучитьМетаданныеНаСервере("Регистры сведений", "РегистрыСведений", "РегистрСведений", 15);
	КонецЕсли;
	
	Если Метаданные.БизнесПроцессы.Количество() > 0 Тогда
		ПолучитьМетаданныеНаСервере("Бизнес-процессы", "БизнесПроцессы", "БизнесПроцесс", 23);
	КонецЕсли;
	
	Если Метаданные.Задачи.Количество() > 0 Тогда
		ПолучитьМетаданныеНаСервере("Задачи", "Задачи", "Задача", 25);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьМетаданныеНаСервере(ИмяРаздела, ИмяМетеданных, ИмяМетаданныхЕЧ, ИндексПиктограммы)
	
	ЭлементыДереваРазделы        = ДеревоОбъектовМетаданных.ПолучитьЭлементы();
	
	ЭлементДереваРаздел                      = ЭлементыДереваРазделы.Добавить();
	ЭлементДереваРаздел.Имя                  = ИмяРаздела;
	ЭлементДереваРаздел.Картинка             = ИндексПиктограммы;
	ЭлементДереваРаздел.ПредставлениеОбъекта = ИмяРаздела;
	
	Для Каждого ОбъектМетаданных Из Метаданные[ИмяМетеданных] Цикл
		
		ЭлементыДерева = ЭлементДереваРаздел.ПолучитьЭлементы();
		
		ЭлементДерева                 = ЭлементыДерева.Добавить();
		ЭлементДерева.Имя             = ОбъектМетаданных.Имя;
		ЭлементДерева.Синоним         = ОбъектМетаданных.Синоним;
		ЭлементДерева.Раздел          = ИмяРаздела;
		ЭлементДерева.Картинка        = ИндексПиктограммы;
		ЭлементДерева.ИмяМетаданных   = ИмяМетеданных;
		ЭлементДерева.ИмяМетаданныхЕЧ = ИмяМетаданныхЕЧ;
		
		Если Синонимы Тогда
			ЭлементДерева.ПредставлениеОбъекта = ЭлементДерева.Синоним;
		Иначе
			ЭлементДерева.ПредставлениеОбъекта = ЭлементДерева.Имя;
		КонецЕсли;
		
		ЭлементДерева.КоличествоОбъектов = "Получить";
		ЭлементДерева.КоличествоВерсий   = "Получить";
		
		ПолучитьНастройкиИсторииДанныхНаСервере(ЭлементДерева, ОбъектМетаданных);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьНастройкиИсторииДанныхНаСервере(ЭлементДерева, ОбъектМетаданных)

	ЭлементДерева.НастройкиИсторииДанныхКонфигуратор = Строка(ОбъектМетаданных.ИсторияДанных);

	НастройкиИсторииДанныхПредприятие = ИсторияДанных.ПолучитьНастройки(ОбъектМетаданных);
	Если НастройкиИсторииДанныхПредприятие <> НеОпределено Тогда
		Если НастройкиИсторииДанныхПредприятие.Использование Тогда
			ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Включена";
		Иначе
			ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Отключена";
		КонецЕсли;

		//Если настройка установлена в режиме предприятие то она являются приоритетной
		ЭлементДерева.ИсторияДанныхВключена = НастройкиИсторииДанныхПредприятие.Использование;

	Иначе
		ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Из свойств конфигурации";

		//Если настройка не установлена в режиме предприятие то настройку считываем из свойств метаданных
		ЭлементДерева.ИсторияДанныхВключена = Строка(ОбъектМетаданных.ИсторияДанных) = "Использовать";

	КонецЕсли;

КонецПроцедуры

&НаКлиенте 
Процедура УстановитьНастройкуИстории(Значение)
	
	МассивИдентификаторовСтрок = Новый Массив;
	
	ИдентификаторыВыделенныхСтрок = Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки;
	
	Для Каждого ВыделеннаяСтрока Из ИдентификаторыВыделенныхСтрок Цикл
		
		ТекущиеДанные = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(ВыделеннаяСтрока);

		Если ЗначениеЗаполнено(ТекущиеДанные.Раздел) Тогда
			МассивИдентификаторовСтрок.Добавить(ВыделеннаяСтрока);
		Иначе

			ЭлементыДереваРазделы = ДеревоОбъектовМетаданных.ПолучитьЭлементы();
			Для Каждого ЭлементДереваРаздел Из ЭлементыДереваРазделы Цикл

				Если ЭлементДереваРаздел.Имя = ТекущиеДанные.Имя Тогда
					
					ЭлементДереваРаздел.НастройкиИсторииДанныхПредприятие = Значение;
					
					ЭлементыДерева = ЭлементДереваРаздел.ПолучитьЭлементы();
					Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
						МассивИдентификаторовСтрок.Добавить(ЭлементДерева.ПолучитьИдентификатор());
					КонецЦикла;

				КонецЕсли;

			КонецЦикла;

		КонецЕсли;
	КонецЦикла;
	
	УстановитьНастройкуИсторииНаСервере(МассивИдентификаторовСтрок, Значение);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкуИсторииНаСервере(МассивИдентификаторовСтрок,
		Значение)

	Для Каждого Стр Из МассивИдентификаторовСтрок Цикл

		ЭлементДерева = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(Стр);

		Если Значение <> "Из свойств конфигурации" Тогда

			НастройкиИсторииДанныхПредприятие = Новый НастройкиИсторииДанных;
			Если Значение = "Включена" Тогда
				НастройкиИсторииДанныхПредприятие.Использование = Истина;
			Иначе
				НастройкиИсторииДанныхПредприятие.Использование = Ложь;
			КонецЕсли;
			ИсторияДанных.УстановитьНастройки(Метаданные[ЭлементДерева.ИмяМетаданных][ЭлементДерева.Имя], НастройкиИсторииДанныхПредприятие);

			ЭлементДерева.НастройкиИсторииДанныхПредприятие = Значение;

		Иначе
			ИсторияДанных.УстановитьНастройки(Метаданные[ЭлементДерева.ИмяМетаданных][ЭлементДерева.Имя], Неопределено);
			ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Из свойств конфигурации";
		КонецЕсли;

		Если ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Включена" Тогда
			ЭлементДерева.ИсторияДанныхВключена = Истина;
		ИначеЕсли ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Отключена" Тогда
			ЭлементДерева.ИсторияДанныхВключена = Ложь;
		ИначеЕсли ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Из свойств конфигурации" Тогда
			Если ЭлементДерева.НастройкиИсторииДанныхПредприятие = "Использовать" Тогда
				ЭлементДерева.ИсторияДанныхВключена = Истина;
			Иначе
				ЭлементДерева.ИсторияДанныхВключена = Ложь;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокОбъекта(ИдентификаторСтроки)
	
	ЭлементТОМ = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
	ОткрытьФорму(ЭлементТОМ.ИмяМетаданныхЕЧ + "." + ЭлементТОМ.Имя + ".ФормаСписка");
	
КонецПроцедуры

&НаСервере
Процедура ПосчитатьКоличествоЭлементовНаСервере()
	
	ЭлементыРазделы = ДеревоОбъектовМетаданных.ПолучитьЭлементы();
	
	Для Каждого ЭлементРаздел Из ЭлементыРазделы Цикл
		
		ЭлементыТОМ = ЭлементРаздел.ПолучитьЭлементы();	
		
		Для Каждого ЭлементТОМ Из ЭлементыТОМ Цикл
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(1) КАК Количество
			|ИЗ
			|	" + ЭлементТОМ.ИмяМетаданныхЕЧ + "." + ЭлементТОМ.Имя + " КАК ТаблицаБД";
			
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			ЭлементТОМ.КоличествоОбъектов =  Выборка.Количество;
			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоЭлементовПоОбъектуМетаданныхНаСервере(ИмяМетаданныхЕЧ, Имя)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	СУММА(1) КАК Количество
		|ИЗ
		|	" + ИмяМетаданныхЕЧ + "." + Имя + " КАК ТаблицаБД";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Количество;

КонецФункции

&НаСервере
Процедура ВыбратьВерсииНаСервере(МассивИдентификаторовСтрок)
	
	Для Каждого Стр Из МассивИдентификаторовСтрок Цикл
		
		ЭлементТОМ = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(Стр);
		ЭлементТОМ.КоличествоВерсий = КоличествоВерсийОбъектаМетаданных(ЭлементТОМ.ИмяМетаданных,ЭлементТОМ.Имя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоВерсийОбъектаМетаданных(ИмяМетаданных, Имя) Экспорт

	П = Новый Структура("Метаданные", Метаданные[ИмяМетаданных][Имя]);

	ТЗ = ИсторияДанных.ВыбратьВерсии(П, "НомерВерсии");

	Возврат ТЗ.Количество();

КонецФункции

&НаСервере
Процедура УдалитьВерсииНаСервере(МассивИдентификаторовСтрок)
	
	Для Каждого Стр Из МассивИдентификаторовСтрок Цикл
		
		ЭлементТОМ = ДеревоОбъектовМетаданных.НайтиПоИдентификатору(Стр);
		
		ИсторияДанных.УдалитьВерсии(Метаданные[ЭлементТОМ.ИмяМетаданных][ЭлементТОМ.Имя]);
		
		
	//	// Прочитаем текущее количество версий
	//	П = Новый Структура("Метаданные", Метаданные[ЭлементТОМ.ИмяМетаданных][ЭлементТОМ.Имя]);
	//
	//	ТЗ = ИсторияДанных.ВыбратьВерсии(П, "ПредставлениеДанных");
	//	
	//	ЭлементТОМ.КоличествоВерсий = ТЗ.Количество();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеВерсии(Команда)
	
	МассивИдентификаторовСтрок = Элементы.ДеревоОбъектовМетаданных.ВыделенныеСтроки;
	УдалитьВерсииНаСервере(МассивИдентификаторовСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьДополнительныеКолонки()

	Элементы.ДеревоОбъектовМетаданныхНастройкиИсторииДанныхКонфигуратор.Видимость = Подробно;
	Элементы.ДеревоОбъектовМетаданныхКоличествоОбъектов.Видимость                 = Подробно;
	Элементы.ДеревоОбъектовМетаданныхКоличествоВерсий.Видимость                   = Подробно;
	
	Элементы.ДеревоОбъектовМетаданныхПодробно.Пометка = Подробно;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьИменаСинонимы()

	ЭлементыДереваРазделы = ДеревоОбъектовМетаданных.ПолучитьЭлементы();

	Для Каждого ЭлементДереваРаздел Из ЭлементыДереваРазделы Цикл

		ЭлементыДерева = ЭлементДереваРаздел.ПолучитьЭлементы();

		Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
			Если Синонимы Тогда
				ЭлементДерева.ПредставлениеОбъекта = ЭлементДерева.Синоним;
			Иначе
				ЭлементДерева.ПредставлениеОбъекта = ЭлементДерева.Имя;
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;
	
	Элементы.ДеревоОбъектовМетаданныхСинонимы.Пометка = Синонимы;
		
КонецПроцедуры

#КонецОбласти

//508